syntax = "proto3";

option go_package = "github.com/ag-computational-bio/BioDataDBModels/go/api";

import "proto/LoadModels.proto";
import "proto/DatasetModels.proto";
import "proto/MetadataModels.proto";
import "proto/CommonModels.proto";
import "google/api/annotations.proto";

// This service is used to create datasets and load their entities into an object storage
// and create corresponding metadata objects to store the location of the entities in object storage.
// This interface should be usable from within the platform and from outside
service LoadService {
    // Creates a list of upload links to place dataset entities in object storage
    // and adds corresponding metadata objects
    rpc CreateLoadLinkSet(CreateLoadLinkSetRequest) returns (UploadLinks) {
        option (google.api.http) = {
            post: "/api/v1/load/createlinks"
            body: "*"
        };
    }
}


// Dataset management service
service DatasetService {

    // Creates a new dataset
    rpc CreateNewDataset(CreateDatasetRequest) returns (DatasetEntry) {
        option (google.api.http) = {
            post: "/api/v1/dataset/create"
            body: "*"
        };
    }

    // Lists all datasets
    rpc Datasets(Empty) returns (DatasetList) {
        option (google.api.http) = {
            post: "/api/v1/dataset/list"
            body: "*"
        };
    }

    // Creates a new dataset version based on an existing dataset
    rpc CreateNewDatasetVersion(NewDatasetVersionRequest) returns (DatasetVersionEntry) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/create"
            body: "*"
        };

    }

    // Lists Versions of a dataset
    rpc DatasetVersions(ID) returns (DatasetVersionList) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/list"
            body: "*"
        };
    }

    // Lists all entities of a dataset
    rpc DatasetVersionObjects(ID) returns (DatasetObjectList) {
        option (google.api.http) = {
            post: "/api/v1/datasetobjects/list"
            body: "*"
        };
    }

    // Creates preauth download links for all entities of a dataset
    rpc DatasetVersionObjectsLinks(ID) returns (DatasetObjectLinks) {
        option (google.api.http) = {
            post: "/api/v1/datasetobjects/links"
            body: "*"
        };
    }
}

service MetadataCompositeStore {
    rpc InitMetadataDB(InitMetadataDBRequest) returns (MetadataDBEntry) {
        option (google.api.http) = {
            post: "/api/v1/metadata/initdb"
            body: "*"
        };
    }

    rpc ListMetadataDBs(Empty) returns (MetadataDBList) {
        option (google.api.http) = {
            get: "/api/v1/metadata/listdbs"
        };
    }

    rpc InitMetadataDBCollection(InitMetadataCollectionRequest) returns (MetadataDBEntry) {
        option (google.api.http) = {
            post: "/api/v1/metadata/initcollection"
            body: "*"
        };
    }

    rpc ListMetadataDBCollections(Empty) returns (MetadataDBCollectionList) {
        option (google.api.http) = {
            get: "/api/v1/metadata/listcollcetions"
        };
    }

    rpc InsertMetadata(InsertMetadataRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/v1/metadata/insert"
            body: "*"
        };
    }

    rpc AddMetadataIndex(AddMetadataIndexRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/v1/metadata/index"
            body: "*"
        };
    }

    rpc Query(QueryRequest) returns (Field) {
        option (google.api.http) = {
            post: "/api/v1/metadata/query"
            body: "*"
        };
    }
}