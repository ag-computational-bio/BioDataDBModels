syntax = "proto3";

option go_package = "github.com/ag-computational-bio/BioDataDBModels/go/api";

import "proto/DatasetAPIModels.proto";
import "proto/DatasetEntryModels.proto";
import "proto/CommonModels.proto";
import "google/api/annotations.proto";

// Dataset management service
// Manages all dataset related services
// All data objects are associated with one data dataset
// Dataset versions group these data objects, which makes them reusable
service DatasetService {
    //Dataset calls

    // CreateNewDataset Creates a new dataset and associates it with a dataset
    rpc CreateNewDataset(CreateDatasetRequest) returns (DatasetEntry) {
        option (google.api.http) = {
            post: "/api/v1/dataset/create"
            body: "*"
        };
    }

    // Datasets Lists all datasets of a user
    rpc Datasets(ID) returns (DatasetList) {
        option (google.api.http) = {
            get: "/api/v1/datasets/{ID}"
        };
    }

    // Lists Versions of a dataset
    rpc DatasetVersions(ID) returns (DatasetVersionList) {
        option (google.api.http) = {
            get: "/api/v1/dataset/{ID}/versions"
        };
    }

    // Updates a field of a dataset
    rpc UpdateDatasetField(UpdateFieldsRequest) returns (DatasetEntry) {
        option (google.api.http) = {
            post: "/api/v1/dataset/update"
            body: "*"
        };
    }

    // Updates the current dataset version of a dataset
    rpc UpdateCurrentDatasetVersion(UpdateCurrentDatasetVersionRequest) returns (DatasetEntry) {
        option (google.api.http) = {
            post: "/api/v1/dataset/updateversion"
            body: "*"
        };
    }

    // DeleteDataset Delete a dataset
    // Datasets can only be deleted if 
    rpc DeleteDataset(ID) returns (Empty) {
        option (google.api.http) = {
            delete: "/api/v1/dataset/{ID}"
        };
    }

    //---------------------------------------------------------------------------------------
    // Dataset version calls

    // Creates a new dataset version which is linked to an exisiting dataset
    rpc CreateNewDatasetVersion(CreateDatasetVersionRequest) returns (DatasetVersionEntry) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/create"
            body: "*"
        };

    }

    rpc GetDatasetVersion(ID) returns (DatasetVersionEntry){
        option (google.api.http) = {
            get: "/api/v1/datasetversion/{ID}"
        };
    }

    rpc UpdateDatasetVersionField(UpdateFieldsRequest) returns (DatasetEntry) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/update"
            body: "*"
        };
    }

    rpc AddObjectGroupToDatasetVersion(AddDatasetObjectGroupToDatasetVersionRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/addobjectgroup"
            body: "*"
        };
    }

    // Deletes a dataset version
    // This should not delete the underlaying dataset objects
    rpc DeleteDatasetVersion(ID) returns (Empty) {
        option (google.api.http) = {
            delete: "/api/v1/datasetversion/{ID}"
        };
    }


    //DatasetVersionObjectGroups Lists all objects groups that are part of the given dataset version
    rpc DatasetVersionObjectGroups(ID) returns (DatasetObjectGroupList) {
        option (google.api.http) = {
            get: "/api/v1/datasetversion/{ID}/objectgroups"
        };
    }

 }

 service ObjectsService {
    // Object group calls

    //CreateDatsetObjectGroup Creates a new dataset object group in the database
    //Will also create all related dataset objects
    rpc CreateDatsetObjectGroup (CreateDatasetObjectGroupRequest) returns (DatasetObjectGroup) {
        option (google.api.http) = {
            post: "/api/v1/datasetobjectgroup/create"
            body: "*"
        };
    }

    rpc DatasetObjectsGroups(ID) returns (DatasetObjectGroupList) {
        option (google.api.http) = {
            get: "/api/v1/datasetobjectgroups/{ID}"
        };
    }


    //DatasetVersionObjectGroups Lists all objects groups that are part of the given dataset version
    rpc DatasetVersionObjectGroups(ID) returns (DatasetObjectGroupList) {
        option (google.api.http) = {
            get: "/api/v1/datasetobjectgroup/{ID}"
        };
    }

    //GetDatasetObjectGroup The dataset object group with the given ID
    //Will only return a dataset object group without its affiliated objects
    rpc GetDatasetObjectGroup(ID) returns (DatasetObjectGroup) {
        option (google.api.http) = {
            get: "/api/v1/datasetobjectgroup/{ID}"
        };
    }

    //DeleteDatasetObjectGroup Deletes the given dataset group and all associated dataset objects
    //Can only be used when all linked dataset versions have been deleted
    rpc DeleteDatasetObjectGroup(ID) returns (Empty) {
        option (google.api.http) = {
            delete: "/api/v1/datasetobjectgroup/{ID}"           
        };
    }
 }