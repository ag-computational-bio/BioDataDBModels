// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.3
// source: proto/DatasetModels.proto

package datasetmodels

import (
	commonmodels "github.com/ag-computational-bio/BioDataDBModels/go/commonmodels"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DatasetEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string                `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Metadata *DatasetEntryMetadata `protobuf:"bytes,2,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *DatasetEntry) Reset() {
	*x = DatasetEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetEntry) ProtoMessage() {}

func (x *DatasetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetEntry.ProtoReflect.Descriptor instead.
func (*DatasetEntry) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{0}
}

func (x *DatasetEntry) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DatasetEntry) GetMetadata() *DatasetEntryMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DatasetEntryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Started     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Started,proto3" json:"Started,omitempty"`         // When the datasets was initiated
	Finished    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Finished,proto3" json:"Finished,omitempty"`       // Last change TODO: need to rename
	Datasetname string               `protobuf:"bytes,5,opt,name=Datasetname,proto3" json:"Datasetname,omitempty"` // Name of the dataset
	Datasettype string               `protobuf:"bytes,6,opt,name=Datasettype,proto3" json:"Datasettype,omitempty"` // Type of the stored data in the dataset
	OwnerID     string               `protobuf:"bytes,7,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`         // ID of the owner
	IsPublic    bool                 `protobuf:"varint,8,opt,name=isPublic,proto3" json:"isPublic,omitempty"`      //Indicates if the dataset if publicly available
}

func (x *DatasetEntryMetadata) Reset() {
	*x = DatasetEntryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetEntryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetEntryMetadata) ProtoMessage() {}

func (x *DatasetEntryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetEntryMetadata.ProtoReflect.Descriptor instead.
func (*DatasetEntryMetadata) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{1}
}

func (x *DatasetEntryMetadata) GetStarted() *timestamp.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *DatasetEntryMetadata) GetFinished() *timestamp.Timestamp {
	if x != nil {
		return x.Finished
	}
	return nil
}

func (x *DatasetEntryMetadata) GetDatasetname() string {
	if x != nil {
		return x.Datasetname
	}
	return ""
}

func (x *DatasetEntryMetadata) GetDatasettype() string {
	if x != nil {
		return x.Datasettype
	}
	return ""
}

func (x *DatasetEntryMetadata) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *DatasetEntryMetadata) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type DatasetObjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`               //ID of the entity
	DatasetID string                 `protobuf:"bytes,2,opt,name=DatasetID,proto3" json:"DatasetID,omitempty"` // ID of the corresponding dataset
	Metadata  *DatasetObjectMetaData `protobuf:"bytes,3,opt,name=Metadata,proto3" json:"Metadata,omitempty"`   // Metadata of the dataset
	Location  *commonmodels.Location `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`   //Where the entity is stored
}

func (x *DatasetObjectEntry) Reset() {
	*x = DatasetObjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetObjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetObjectEntry) ProtoMessage() {}

func (x *DatasetObjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetObjectEntry.ProtoReflect.Descriptor instead.
func (*DatasetObjectEntry) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{2}
}

func (x *DatasetObjectEntry) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DatasetObjectEntry) GetDatasetID() string {
	if x != nil {
		return x.DatasetID
	}
	return ""
}

func (x *DatasetObjectEntry) GetMetadata() *DatasetObjectMetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DatasetObjectEntry) GetLocation() *commonmodels.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type DatasetObjectMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string               `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`      // Filename: Name of the original file e.g.: mydata.json
	Filetype   string               `protobuf:"bytes,2,opt,name=Filetype,proto3" json:"Filetype,omitempty"`      // Filetype: Type of the stored file, e.g.: json, gbff,...
	Name       string               `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`              // Name: Name of the dataset entity e.g.: mydata
	Version    string               `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`        // Remote version of the dataset
	Origin     *commonmodels.Origin `protobuf:"bytes,5,opt,name=Origin,proto3" json:"Origin,omitempty"`          // Origin: Source of the dataset
	ContentLen int64                `protobuf:"varint,6,opt,name=ContentLen,proto3" json:"ContentLen,omitempty"` // ContentLen: Lenght of the stored dataset
}

func (x *DatasetObjectMetaData) Reset() {
	*x = DatasetObjectMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetObjectMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetObjectMetaData) ProtoMessage() {}

func (x *DatasetObjectMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetObjectMetaData.ProtoReflect.Descriptor instead.
func (*DatasetObjectMetaData) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{3}
}

func (x *DatasetObjectMetaData) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DatasetObjectMetaData) GetFiletype() string {
	if x != nil {
		return x.Filetype
	}
	return ""
}

func (x *DatasetObjectMetaData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatasetObjectMetaData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DatasetObjectMetaData) GetOrigin() *commonmodels.Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *DatasetObjectMetaData) GetContentLen() int64 {
	if x != nil {
		return x.ContentLen
	}
	return 0
}

type DatasetObjectLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Entites []*DatasetObjectLink `protobuf:"bytes,2,rep,name=Entites,proto3" json:"Entites,omitempty"`
}

func (x *DatasetObjectLinks) Reset() {
	*x = DatasetObjectLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetObjectLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetObjectLinks) ProtoMessage() {}

func (x *DatasetObjectLinks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetObjectLinks.ProtoReflect.Descriptor instead.
func (*DatasetObjectLinks) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{4}
}

func (x *DatasetObjectLinks) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DatasetObjectLinks) GetEntites() []*DatasetObjectLink {
	if x != nil {
		return x.Entites
	}
	return nil
}

type DatasetObjectLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link     string `protobuf:"bytes,1,opt,name=Link,proto3" json:"Link,omitempty"`
	ObjectID string `protobuf:"bytes,2,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
}

func (x *DatasetObjectLink) Reset() {
	*x = DatasetObjectLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetObjectLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetObjectLink) ProtoMessage() {}

func (x *DatasetObjectLink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetObjectLink.ProtoReflect.Descriptor instead.
func (*DatasetObjectLink) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{5}
}

func (x *DatasetObjectLink) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *DatasetObjectLink) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

type CreateDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetName string `protobuf:"bytes,1,opt,name=DatasetName,proto3" json:"DatasetName,omitempty"` // Name of the dataset
	Datatype    string `protobuf:"bytes,2,opt,name=Datatype,proto3" json:"Datatype,omitempty"`       //Datatype of the dataset, e.g. json, gbff, fasta
}

func (x *CreateDatasetRequest) Reset() {
	*x = CreateDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetRequest) ProtoMessage() {}

func (x *CreateDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasetRequest) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDatasetRequest) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *CreateDatasetRequest) GetDatatype() string {
	if x != nil {
		return x.Datatype
	}
	return ""
}

type DatasetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*DatasetEntry `protobuf:"bytes,1,rep,name=Datasets,proto3" json:"Datasets,omitempty"`
}

func (x *DatasetList) Reset() {
	*x = DatasetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetList) ProtoMessage() {}

func (x *DatasetList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetList.ProtoReflect.Descriptor instead.
func (*DatasetList) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{7}
}

func (x *DatasetList) GetDatasets() []*DatasetEntry {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type DatasetObjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*DatasetEntry `protobuf:"bytes,1,rep,name=Datasets,proto3" json:"Datasets,omitempty"`
}

func (x *DatasetObjectList) Reset() {
	*x = DatasetObjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetObjectList) ProtoMessage() {}

func (x *DatasetObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetObjectList.ProtoReflect.Descriptor instead.
func (*DatasetObjectList) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{8}
}

func (x *DatasetObjectList) GetDatasets() []*DatasetEntry {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type DatasetVersionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string                  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Metadata *DatasetVersionMetadata `protobuf:"bytes,2,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *DatasetVersionEntry) Reset() {
	*x = DatasetVersionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetVersionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetVersionEntry) ProtoMessage() {}

func (x *DatasetVersionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetVersionEntry.ProtoReflect.Descriptor instead.
func (*DatasetVersionEntry) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{9}
}

func (x *DatasetVersionEntry) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DatasetVersionEntry) GetMetadata() *DatasetVersionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DatasetVersionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetID   string `protobuf:"bytes,1,opt,name=DatasetID,proto3" json:"DatasetID,omitempty"`
	DatasetName string `protobuf:"bytes,2,opt,name=DatasetName,proto3" json:"DatasetName,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *DatasetVersionMetadata) Reset() {
	*x = DatasetVersionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetVersionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetVersionMetadata) ProtoMessage() {}

func (x *DatasetVersionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetVersionMetadata.ProtoReflect.Descriptor instead.
func (*DatasetVersionMetadata) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{10}
}

func (x *DatasetVersionMetadata) GetDatasetID() string {
	if x != nil {
		return x.DatasetID
	}
	return ""
}

func (x *DatasetVersionMetadata) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *DatasetVersionMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type NewDatasetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetID string `protobuf:"bytes,1,opt,name=DatasetID,proto3" json:"DatasetID,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *NewDatasetVersionRequest) Reset() {
	*x = NewDatasetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DatasetModels_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDatasetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDatasetVersionRequest) ProtoMessage() {}

func (x *NewDatasetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DatasetModels_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDatasetVersionRequest.ProtoReflect.Descriptor instead.
func (*NewDatasetVersionRequest) Descriptor() ([]byte, []int) {
	return file_proto_DatasetModels_proto_rawDescGZIP(), []int{11}
}

func (x *NewDatasetVersionRequest) GetDatasetID() string {
	if x != nil {
		return x.DatasetID
	}
	return ""
}

func (x *NewDatasetVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_proto_DatasetModels_proto protoreflect.FileDescriptor

var file_proto_DatasetModels_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x84, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x31, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x3a, 0x31, 0x92, 0x41, 0x2e, 0x0a, 0x2c, 0x2a, 0x0c, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x32, 0x1c, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x34, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x3a, 0x48, 0x92, 0x41, 0x45, 0x0a, 0x43, 0x2a,
	0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x32, 0x2b, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x3d, 0x92, 0x41, 0x3a, 0x0a, 0x38, 0x2a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x32, 0x22, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66,
	0x20, 0x61, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xe3, 0x02, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c,
	0x65, 0x6e, 0x3a, 0xa2, 0x01, 0x92, 0x41, 0x9e, 0x01, 0x0a, 0x35, 0x2a, 0x15, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x32, 0x1c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20,
	0x61, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x32, 0x65, 0x12, 0x63, 0x7b, 0x20, 0x22, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x62, 0x66, 0x66, 0x22, 0x2c, 0x20, 0x22,
	0x46, 0x69, 0x6c, 0x65, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x67, 0x62, 0x66, 0x66,
	0x22, 0x2c, 0x20, 0x22, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74,
	0x22, 0x2c, 0x20, 0x22, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x76,
	0x30, 0x2e, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x6e, 0x22, 0x3a, 0x20, 0x35, 0x20, 0x7d, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x07, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x07, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x65, 0x73, 0x3a, 0x48, 0x92, 0x41,
	0x45, 0x0a, 0x43, 0x2a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x32, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x20, 0x74, 0x6f, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x3a, 0x4a, 0x92, 0x41,
	0x47, 0x0a, 0x45, 0x2a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x32, 0x30, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x20, 0x74, 0x6f,
	0x20, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x61, 0x20, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x61,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x3a,
	0x86, 0x01, 0x92, 0x41, 0x82, 0x01, 0x0a, 0x4e, 0x2a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x32, 0x3b, 0x44, 0x61, 0x74, 0x61, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x42, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x44, 0x42, 0x32, 0x30, 0x12, 0x2e, 0x7b, 0x20, 0x22, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74,
	0x22, 0x2c, 0x20, 0x22, 0x44, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x20, 0x22,
	0x74, 0x65, 0x73, 0x74, 0x32, 0x22, 0x20, 0x7d, 0x22, 0x60, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x3a, 0x26, 0x92, 0x41, 0x23, 0x0a, 0x21, 0x2a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x12, 0x41, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x11, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x3a, 0x26, 0x92, 0x41, 0x23, 0x0a,
	0x21, 0x2a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x12,
	0x41, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a,
	0x3a, 0x92, 0x41, 0x37, 0x0a, 0x35, 0x2a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x32, 0x1e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x16,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x3a, 0x3c, 0x92, 0x41, 0x39, 0x0a, 0x37, 0x2a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x1d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x92,
	0x01, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x3e, 0x92, 0x41, 0x3b, 0x0a, 0x39, 0x2a, 0x18, 0x4e, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x32, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20,
	0x6e, 0x65, 0x77, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x67, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x2d, 0x62, 0x69, 0x6f, 0x2f, 0x42, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_DatasetModels_proto_rawDescOnce sync.Once
	file_proto_DatasetModels_proto_rawDescData = file_proto_DatasetModels_proto_rawDesc
)

func file_proto_DatasetModels_proto_rawDescGZIP() []byte {
	file_proto_DatasetModels_proto_rawDescOnce.Do(func() {
		file_proto_DatasetModels_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_DatasetModels_proto_rawDescData)
	})
	return file_proto_DatasetModels_proto_rawDescData
}

var file_proto_DatasetModels_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_DatasetModels_proto_goTypes = []interface{}{
	(*DatasetEntry)(nil),             // 0: DatasetEntry
	(*DatasetEntryMetadata)(nil),     // 1: DatasetEntryMetadata
	(*DatasetObjectEntry)(nil),       // 2: DatasetObjectEntry
	(*DatasetObjectMetaData)(nil),    // 3: DatasetObjectMetaData
	(*DatasetObjectLinks)(nil),       // 4: DatasetObjectLinks
	(*DatasetObjectLink)(nil),        // 5: DatasetObjectLink
	(*CreateDatasetRequest)(nil),     // 6: CreateDatasetRequest
	(*DatasetList)(nil),              // 7: DatasetList
	(*DatasetObjectList)(nil),        // 8: DatasetObjectList
	(*DatasetVersionEntry)(nil),      // 9: DatasetVersionEntry
	(*DatasetVersionMetadata)(nil),   // 10: DatasetVersionMetadata
	(*NewDatasetVersionRequest)(nil), // 11: NewDatasetVersionRequest
	(*timestamp.Timestamp)(nil),      // 12: google.protobuf.Timestamp
	(*commonmodels.Location)(nil),    // 13: Location
	(*commonmodels.Origin)(nil),      // 14: Origin
}
var file_proto_DatasetModels_proto_depIdxs = []int32{
	1,  // 0: DatasetEntry.Metadata:type_name -> DatasetEntryMetadata
	12, // 1: DatasetEntryMetadata.Started:type_name -> google.protobuf.Timestamp
	12, // 2: DatasetEntryMetadata.Finished:type_name -> google.protobuf.Timestamp
	3,  // 3: DatasetObjectEntry.Metadata:type_name -> DatasetObjectMetaData
	13, // 4: DatasetObjectEntry.Location:type_name -> Location
	14, // 5: DatasetObjectMetaData.Origin:type_name -> Origin
	5,  // 6: DatasetObjectLinks.Entites:type_name -> DatasetObjectLink
	0,  // 7: DatasetList.Datasets:type_name -> DatasetEntry
	0,  // 8: DatasetObjectList.Datasets:type_name -> DatasetEntry
	10, // 9: DatasetVersionEntry.Metadata:type_name -> DatasetVersionMetadata
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_DatasetModels_proto_init() }
func file_proto_DatasetModels_proto_init() {
	if File_proto_DatasetModels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_DatasetModels_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetEntryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetObjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetObjectMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetObjectLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetObjectLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetObjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetVersionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetVersionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DatasetModels_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDatasetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_DatasetModels_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_DatasetModels_proto_goTypes,
		DependencyIndexes: file_proto_DatasetModels_proto_depIdxs,
		MessageInfos:      file_proto_DatasetModels_proto_msgTypes,
	}.Build()
	File_proto_DatasetModels_proto = out.File
	file_proto_DatasetModels_proto_rawDesc = nil
	file_proto_DatasetModels_proto_goTypes = nil
	file_proto_DatasetModels_proto_depIdxs = nil
}
