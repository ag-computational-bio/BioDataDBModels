// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: proto/AuthAPI.proto

package api

import (
	context "context"
	authmodels "github.com/ag-computational-bio/BioDataDBModels/go/authmodels"
	commonmodels "github.com/ag-computational-bio/BioDataDBModels/go/commonmodels"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_proto_AuthAPI_proto protoreflect.FileDescriptor

var file_proto_AuthAPI_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x50, 0x49, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xf6, 0x01, 0x0a, 0x0f, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x61, 0x70, 0x69, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x03, 0x2e, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x03, 0x2e, 0x49, 0x44, 0x1a, 0x06,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x61, 0x70, 0x69, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x2d,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2d, 0x62, 0x69,
	0x6f, 0x2f, 0x42, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_proto_AuthAPI_proto_goTypes = []interface{}{
	(*authmodels.CreateTokenRequest)(nil), // 0: CreateTokenRequest
	(*commonmodels.ID)(nil),               // 1: ID
	(*authmodels.TokenEntry)(nil),         // 2: TokenEntry
	(*authmodels.TokenList)(nil),          // 3: TokenList
	(*commonmodels.Empty)(nil),            // 4: Empty
}
var file_proto_AuthAPI_proto_depIdxs = []int32{
	0, // 0: APITokenService.CreateAPIToken:input_type -> CreateTokenRequest
	1, // 1: APITokenService.GetTokenList:input_type -> ID
	1, // 2: APITokenService.RevokeToken:input_type -> ID
	2, // 3: APITokenService.CreateAPIToken:output_type -> TokenEntry
	3, // 4: APITokenService.GetTokenList:output_type -> TokenList
	4, // 5: APITokenService.RevokeToken:output_type -> Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_AuthAPI_proto_init() }
func file_proto_AuthAPI_proto_init() {
	if File_proto_AuthAPI_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_AuthAPI_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_AuthAPI_proto_goTypes,
		DependencyIndexes: file_proto_AuthAPI_proto_depIdxs,
	}.Build()
	File_proto_AuthAPI_proto = out.File
	file_proto_AuthAPI_proto_rawDesc = nil
	file_proto_AuthAPI_proto_goTypes = nil
	file_proto_AuthAPI_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APITokenServiceClient is the client API for APITokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APITokenServiceClient interface {
	// CreateAPIToken Creates a new API token and returns it
	CreateAPIToken(ctx context.Context, in *authmodels.CreateTokenRequest, opts ...grpc.CallOption) (*authmodels.TokenEntry, error)
	// GetTokenList Lists all available access tokens
	GetTokenList(ctx context.Context, in *commonmodels.ID, opts ...grpc.CallOption) (*authmodels.TokenList, error)
	// RevokeToken Revokes an access token
	RevokeToken(ctx context.Context, in *commonmodels.ID, opts ...grpc.CallOption) (*commonmodels.Empty, error)
}

type aPITokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPITokenServiceClient(cc grpc.ClientConnInterface) APITokenServiceClient {
	return &aPITokenServiceClient{cc}
}

func (c *aPITokenServiceClient) CreateAPIToken(ctx context.Context, in *authmodels.CreateTokenRequest, opts ...grpc.CallOption) (*authmodels.TokenEntry, error) {
	out := new(authmodels.TokenEntry)
	err := c.cc.Invoke(ctx, "/APITokenService/CreateAPIToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPITokenServiceClient) GetTokenList(ctx context.Context, in *commonmodels.ID, opts ...grpc.CallOption) (*authmodels.TokenList, error) {
	out := new(authmodels.TokenList)
	err := c.cc.Invoke(ctx, "/APITokenService/GetTokenList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPITokenServiceClient) RevokeToken(ctx context.Context, in *commonmodels.ID, opts ...grpc.CallOption) (*commonmodels.Empty, error) {
	out := new(commonmodels.Empty)
	err := c.cc.Invoke(ctx, "/APITokenService/RevokeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APITokenServiceServer is the server API for APITokenService service.
type APITokenServiceServer interface {
	// CreateAPIToken Creates a new API token and returns it
	CreateAPIToken(context.Context, *authmodels.CreateTokenRequest) (*authmodels.TokenEntry, error)
	// GetTokenList Lists all available access tokens
	GetTokenList(context.Context, *commonmodels.ID) (*authmodels.TokenList, error)
	// RevokeToken Revokes an access token
	RevokeToken(context.Context, *commonmodels.ID) (*commonmodels.Empty, error)
}

// UnimplementedAPITokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPITokenServiceServer struct {
}

func (*UnimplementedAPITokenServiceServer) CreateAPIToken(context.Context, *authmodels.CreateTokenRequest) (*authmodels.TokenEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAPIToken not implemented")
}
func (*UnimplementedAPITokenServiceServer) GetTokenList(context.Context, *commonmodels.ID) (*authmodels.TokenList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenList not implemented")
}
func (*UnimplementedAPITokenServiceServer) RevokeToken(context.Context, *commonmodels.ID) (*commonmodels.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeToken not implemented")
}

func RegisterAPITokenServiceServer(s *grpc.Server, srv APITokenServiceServer) {
	s.RegisterService(&_APITokenService_serviceDesc, srv)
}

func _APITokenService_CreateAPIToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(authmodels.CreateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APITokenServiceServer).CreateAPIToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/APITokenService/CreateAPIToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APITokenServiceServer).CreateAPIToken(ctx, req.(*authmodels.CreateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APITokenService_GetTokenList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonmodels.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APITokenServiceServer).GetTokenList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/APITokenService/GetTokenList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APITokenServiceServer).GetTokenList(ctx, req.(*commonmodels.ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _APITokenService_RevokeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonmodels.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APITokenServiceServer).RevokeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/APITokenService/RevokeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APITokenServiceServer).RevokeToken(ctx, req.(*commonmodels.ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _APITokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "APITokenService",
	HandlerType: (*APITokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAPIToken",
			Handler:    _APITokenService_CreateAPIToken_Handler,
		},
		{
			MethodName: "GetTokenList",
			Handler:    _APITokenService_GetTokenList_Handler,
		},
		{
			MethodName: "RevokeToken",
			Handler:    _APITokenService_RevokeToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/AuthAPI.proto",
}
