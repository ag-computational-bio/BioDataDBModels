// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: proto/MetadataAPI.proto

package api

import (
	context "context"
	commonmodels "github.com/ag-computational-bio/BioDataDBModels/go/commonmodels"
	metadatamodels "github.com/ag-computational-bio/BioDataDBModels/go/metadatamodels"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_proto_MetadataAPI_proto protoreflect.FileDescriptor

var file_proto_MetadataAPI_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x41, 0x50, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xa0, 0x05,
	0x0a, 0x16, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x12, 0x16, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44,
	0x42, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x3a, 0x01, 0x2a, 0x12, 0x4c, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x73, 0x12, 0x06, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x64, 0x62, 0x73, 0x12, 0x7a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x44, 0x42, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x44, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x63, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54,
	0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x01, 0x2a, 0x12, 0x41, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x01, 0x2a,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x67, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2d,
	0x62, 0x69, 0x6f, 0x2f, 0x42, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var file_proto_MetadataAPI_proto_goTypes = []interface{}{
	(*metadatamodels.InitMetadataDBRequest)(nil),         // 0: InitMetadataDBRequest
	(*commonmodels.Empty)(nil),                           // 1: Empty
	(*metadatamodels.InitMetadataCollectionRequest)(nil), // 2: InitMetadataCollectionRequest
	(*metadatamodels.InsertMetadataRequest)(nil),         // 3: InsertMetadataRequest
	(*metadatamodels.AddMetadataIndexRequest)(nil),       // 4: AddMetadataIndexRequest
	(*metadatamodels.QueryRequest)(nil),                  // 5: QueryRequest
	(*metadatamodels.MetadataDBEntry)(nil),               // 6: MetadataDBEntry
	(*metadatamodels.MetadataDBList)(nil),                // 7: MetadataDBList
	(*metadatamodels.MetadataDBCollectionList)(nil),      // 8: MetadataDBCollectionList
	(*metadatamodels.Field)(nil),                         // 9: Field
}
var file_proto_MetadataAPI_proto_depIdxs = []int32{
	0, // 0: MetadataCompositeStore.CreateMetadataDB:input_type -> InitMetadataDBRequest
	1, // 1: MetadataCompositeStore.ListMetadataDBs:input_type -> Empty
	2, // 2: MetadataCompositeStore.CreateMetadataDBCollection:input_type -> InitMetadataCollectionRequest
	1, // 3: MetadataCompositeStore.ListMetadataDBCollections:input_type -> Empty
	3, // 4: MetadataCompositeStore.InsertMetadata:input_type -> InsertMetadataRequest
	4, // 5: MetadataCompositeStore.AddMetadataIndex:input_type -> AddMetadataIndexRequest
	5, // 6: MetadataCompositeStore.Query:input_type -> QueryRequest
	6, // 7: MetadataCompositeStore.CreateMetadataDB:output_type -> MetadataDBEntry
	7, // 8: MetadataCompositeStore.ListMetadataDBs:output_type -> MetadataDBList
	6, // 9: MetadataCompositeStore.CreateMetadataDBCollection:output_type -> MetadataDBEntry
	8, // 10: MetadataCompositeStore.ListMetadataDBCollections:output_type -> MetadataDBCollectionList
	1, // 11: MetadataCompositeStore.InsertMetadata:output_type -> Empty
	1, // 12: MetadataCompositeStore.AddMetadataIndex:output_type -> Empty
	9, // 13: MetadataCompositeStore.Query:output_type -> Field
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_MetadataAPI_proto_init() }
func file_proto_MetadataAPI_proto_init() {
	if File_proto_MetadataAPI_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_MetadataAPI_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_MetadataAPI_proto_goTypes,
		DependencyIndexes: file_proto_MetadataAPI_proto_depIdxs,
	}.Build()
	File_proto_MetadataAPI_proto = out.File
	file_proto_MetadataAPI_proto_rawDesc = nil
	file_proto_MetadataAPI_proto_goTypes = nil
	file_proto_MetadataAPI_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MetadataCompositeStoreClient is the client API for MetadataCompositeStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadataCompositeStoreClient interface {
	CreateMetadataDB(ctx context.Context, in *metadatamodels.InitMetadataDBRequest, opts ...grpc.CallOption) (*metadatamodels.MetadataDBEntry, error)
	ListMetadataDBs(ctx context.Context, in *commonmodels.Empty, opts ...grpc.CallOption) (*metadatamodels.MetadataDBList, error)
	CreateMetadataDBCollection(ctx context.Context, in *metadatamodels.InitMetadataCollectionRequest, opts ...grpc.CallOption) (*metadatamodels.MetadataDBEntry, error)
	ListMetadataDBCollections(ctx context.Context, in *commonmodels.Empty, opts ...grpc.CallOption) (*metadatamodels.MetadataDBCollectionList, error)
	InsertMetadata(ctx context.Context, in *metadatamodels.InsertMetadataRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error)
	AddMetadataIndex(ctx context.Context, in *metadatamodels.AddMetadataIndexRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error)
	Query(ctx context.Context, in *metadatamodels.QueryRequest, opts ...grpc.CallOption) (*metadatamodels.Field, error)
}

type metadataCompositeStoreClient struct {
	cc grpc.ClientConnInterface
}

func NewMetadataCompositeStoreClient(cc grpc.ClientConnInterface) MetadataCompositeStoreClient {
	return &metadataCompositeStoreClient{cc}
}

func (c *metadataCompositeStoreClient) CreateMetadataDB(ctx context.Context, in *metadatamodels.InitMetadataDBRequest, opts ...grpc.CallOption) (*metadatamodels.MetadataDBEntry, error) {
	out := new(metadatamodels.MetadataDBEntry)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/CreateMetadataDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) ListMetadataDBs(ctx context.Context, in *commonmodels.Empty, opts ...grpc.CallOption) (*metadatamodels.MetadataDBList, error) {
	out := new(metadatamodels.MetadataDBList)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/ListMetadataDBs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) CreateMetadataDBCollection(ctx context.Context, in *metadatamodels.InitMetadataCollectionRequest, opts ...grpc.CallOption) (*metadatamodels.MetadataDBEntry, error) {
	out := new(metadatamodels.MetadataDBEntry)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/CreateMetadataDBCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) ListMetadataDBCollections(ctx context.Context, in *commonmodels.Empty, opts ...grpc.CallOption) (*metadatamodels.MetadataDBCollectionList, error) {
	out := new(metadatamodels.MetadataDBCollectionList)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/ListMetadataDBCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) InsertMetadata(ctx context.Context, in *metadatamodels.InsertMetadataRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error) {
	out := new(commonmodels.Empty)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/InsertMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) AddMetadataIndex(ctx context.Context, in *metadatamodels.AddMetadataIndexRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error) {
	out := new(commonmodels.Empty)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/AddMetadataIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataCompositeStoreClient) Query(ctx context.Context, in *metadatamodels.QueryRequest, opts ...grpc.CallOption) (*metadatamodels.Field, error) {
	out := new(metadatamodels.Field)
	err := c.cc.Invoke(ctx, "/MetadataCompositeStore/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadataCompositeStoreServer is the server API for MetadataCompositeStore service.
type MetadataCompositeStoreServer interface {
	CreateMetadataDB(context.Context, *metadatamodels.InitMetadataDBRequest) (*metadatamodels.MetadataDBEntry, error)
	ListMetadataDBs(context.Context, *commonmodels.Empty) (*metadatamodels.MetadataDBList, error)
	CreateMetadataDBCollection(context.Context, *metadatamodels.InitMetadataCollectionRequest) (*metadatamodels.MetadataDBEntry, error)
	ListMetadataDBCollections(context.Context, *commonmodels.Empty) (*metadatamodels.MetadataDBCollectionList, error)
	InsertMetadata(context.Context, *metadatamodels.InsertMetadataRequest) (*commonmodels.Empty, error)
	AddMetadataIndex(context.Context, *metadatamodels.AddMetadataIndexRequest) (*commonmodels.Empty, error)
	Query(context.Context, *metadatamodels.QueryRequest) (*metadatamodels.Field, error)
}

// UnimplementedMetadataCompositeStoreServer can be embedded to have forward compatible implementations.
type UnimplementedMetadataCompositeStoreServer struct {
}

func (*UnimplementedMetadataCompositeStoreServer) CreateMetadataDB(context.Context, *metadatamodels.InitMetadataDBRequest) (*metadatamodels.MetadataDBEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetadataDB not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) ListMetadataDBs(context.Context, *commonmodels.Empty) (*metadatamodels.MetadataDBList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetadataDBs not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) CreateMetadataDBCollection(context.Context, *metadatamodels.InitMetadataCollectionRequest) (*metadatamodels.MetadataDBEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetadataDBCollection not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) ListMetadataDBCollections(context.Context, *commonmodels.Empty) (*metadatamodels.MetadataDBCollectionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetadataDBCollections not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) InsertMetadata(context.Context, *metadatamodels.InsertMetadataRequest) (*commonmodels.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertMetadata not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) AddMetadataIndex(context.Context, *metadatamodels.AddMetadataIndexRequest) (*commonmodels.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMetadataIndex not implemented")
}
func (*UnimplementedMetadataCompositeStoreServer) Query(context.Context, *metadatamodels.QueryRequest) (*metadatamodels.Field, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterMetadataCompositeStoreServer(s *grpc.Server, srv MetadataCompositeStoreServer) {
	s.RegisterService(&_MetadataCompositeStore_serviceDesc, srv)
}

func _MetadataCompositeStore_CreateMetadataDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(metadatamodels.InitMetadataDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).CreateMetadataDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/CreateMetadataDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).CreateMetadataDB(ctx, req.(*metadatamodels.InitMetadataDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_ListMetadataDBs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonmodels.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).ListMetadataDBs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/ListMetadataDBs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).ListMetadataDBs(ctx, req.(*commonmodels.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_CreateMetadataDBCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(metadatamodels.InitMetadataCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).CreateMetadataDBCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/CreateMetadataDBCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).CreateMetadataDBCollection(ctx, req.(*metadatamodels.InitMetadataCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_ListMetadataDBCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonmodels.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).ListMetadataDBCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/ListMetadataDBCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).ListMetadataDBCollections(ctx, req.(*commonmodels.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_InsertMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(metadatamodels.InsertMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).InsertMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/InsertMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).InsertMetadata(ctx, req.(*metadatamodels.InsertMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_AddMetadataIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(metadatamodels.AddMetadataIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).AddMetadataIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/AddMetadataIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).AddMetadataIndex(ctx, req.(*metadatamodels.AddMetadataIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataCompositeStore_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(metadatamodels.QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataCompositeStoreServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataCompositeStore/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataCompositeStoreServer).Query(ctx, req.(*metadatamodels.QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetadataCompositeStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MetadataCompositeStore",
	HandlerType: (*MetadataCompositeStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetadataDB",
			Handler:    _MetadataCompositeStore_CreateMetadataDB_Handler,
		},
		{
			MethodName: "ListMetadataDBs",
			Handler:    _MetadataCompositeStore_ListMetadataDBs_Handler,
		},
		{
			MethodName: "CreateMetadataDBCollection",
			Handler:    _MetadataCompositeStore_CreateMetadataDBCollection_Handler,
		},
		{
			MethodName: "ListMetadataDBCollections",
			Handler:    _MetadataCompositeStore_ListMetadataDBCollections_Handler,
		},
		{
			MethodName: "InsertMetadata",
			Handler:    _MetadataCompositeStore_InsertMetadata_Handler,
		},
		{
			MethodName: "AddMetadataIndex",
			Handler:    _MetadataCompositeStore_AddMetadataIndex_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _MetadataCompositeStore_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/MetadataAPI.proto",
}
