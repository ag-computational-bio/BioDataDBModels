// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/LoadAPI.proto

package api

import (
	context "context"
	commonmodels "github.com/ag-computational-bio/BioDataDBModels/go/commonmodels"
	loadmodels "github.com/ag-computational-bio/BioDataDBModels/go/loadmodels"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_proto_LoadAPI_proto protoreflect.FileDescriptor

var file_proto_LoadAPI_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x50, 0x49, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x85, 0x04, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x69, 0x6e, 0x69, 0x74,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x22, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x61, 0x64,
	0x2f, 0x67, 0x65, 0x74, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x6b, 0x70, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6d,
	0x0a, 0x15, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a, 0x01, 0x2a, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x2d, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2d, 0x62, 0x69, 0x6f,
	0x2f, 0x42, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_proto_LoadAPI_proto_goTypes = []interface{}{
	(*loadmodels.CreateUploadLinkRequest)(nil),            // 0: CreateUploadLinkRequest
	(*loadmodels.InitMultipartUploadRequest)(nil),         // 1: InitMultipartUploadRequest
	(*loadmodels.GetMultipartUploadLinkPartRequest)(nil),  // 2: GetMultipartUploadLinkPartRequest
	(*loadmodels.FinishMultipartUploadRequest)(nil),       // 3: FinishMultipartUploadRequest
	(*loadmodels.CreateUploadLinkResponse)(nil),           // 4: CreateUploadLinkResponse
	(*loadmodels.InitMultiPartUploadResponse)(nil),        // 5: InitMultiPartUploadResponse
	(*loadmodels.GetMultipartUploadLinkPartResponse)(nil), // 6: GetMultipartUploadLinkPartResponse
	(*commonmodels.Empty)(nil),                            // 7: Empty
}
var file_proto_LoadAPI_proto_depIdxs = []int32{
	0, // 0: LoadService.CreateUploadLink:input_type -> CreateUploadLinkRequest
	1, // 1: LoadService.InitMultipartUpload:input_type -> InitMultipartUploadRequest
	2, // 2: LoadService.GetMultipartUploadLinkPart:input_type -> GetMultipartUploadLinkPartRequest
	3, // 3: LoadService.FinishMultipartUpload:input_type -> FinishMultipartUploadRequest
	4, // 4: LoadService.CreateUploadLink:output_type -> CreateUploadLinkResponse
	5, // 5: LoadService.InitMultipartUpload:output_type -> InitMultiPartUploadResponse
	6, // 6: LoadService.GetMultipartUploadLinkPart:output_type -> GetMultipartUploadLinkPartResponse
	7, // 7: LoadService.FinishMultipartUpload:output_type -> Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_LoadAPI_proto_init() }
func file_proto_LoadAPI_proto_init() {
	if File_proto_LoadAPI_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_LoadAPI_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_LoadAPI_proto_goTypes,
		DependencyIndexes: file_proto_LoadAPI_proto_depIdxs,
	}.Build()
	File_proto_LoadAPI_proto = out.File
	file_proto_LoadAPI_proto_rawDesc = nil
	file_proto_LoadAPI_proto_goTypes = nil
	file_proto_LoadAPI_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoadServiceClient is the client API for LoadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadServiceClient interface {
	// Creates a list of upload links to place dataset entities in object storage
	// and adds corresponding metadata objects
	CreateUploadLink(ctx context.Context, in *loadmodels.CreateUploadLinkRequest, opts ...grpc.CallOption) (*loadmodels.CreateUploadLinkResponse, error)
	InitMultipartUpload(ctx context.Context, in *loadmodels.InitMultipartUploadRequest, opts ...grpc.CallOption) (*loadmodels.InitMultiPartUploadResponse, error)
	GetMultipartUploadLinkPart(ctx context.Context, in *loadmodels.GetMultipartUploadLinkPartRequest, opts ...grpc.CallOption) (*loadmodels.GetMultipartUploadLinkPartResponse, error)
	FinishMultipartUpload(ctx context.Context, in *loadmodels.FinishMultipartUploadRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error)
}

type loadServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoadServiceClient(cc grpc.ClientConnInterface) LoadServiceClient {
	return &loadServiceClient{cc}
}

func (c *loadServiceClient) CreateUploadLink(ctx context.Context, in *loadmodels.CreateUploadLinkRequest, opts ...grpc.CallOption) (*loadmodels.CreateUploadLinkResponse, error) {
	out := new(loadmodels.CreateUploadLinkResponse)
	err := c.cc.Invoke(ctx, "/LoadService/CreateUploadLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadServiceClient) InitMultipartUpload(ctx context.Context, in *loadmodels.InitMultipartUploadRequest, opts ...grpc.CallOption) (*loadmodels.InitMultiPartUploadResponse, error) {
	out := new(loadmodels.InitMultiPartUploadResponse)
	err := c.cc.Invoke(ctx, "/LoadService/InitMultipartUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadServiceClient) GetMultipartUploadLinkPart(ctx context.Context, in *loadmodels.GetMultipartUploadLinkPartRequest, opts ...grpc.CallOption) (*loadmodels.GetMultipartUploadLinkPartResponse, error) {
	out := new(loadmodels.GetMultipartUploadLinkPartResponse)
	err := c.cc.Invoke(ctx, "/LoadService/GetMultipartUploadLinkPart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadServiceClient) FinishMultipartUpload(ctx context.Context, in *loadmodels.FinishMultipartUploadRequest, opts ...grpc.CallOption) (*commonmodels.Empty, error) {
	out := new(commonmodels.Empty)
	err := c.cc.Invoke(ctx, "/LoadService/FinishMultipartUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadServiceServer is the server API for LoadService service.
type LoadServiceServer interface {
	// Creates a list of upload links to place dataset entities in object storage
	// and adds corresponding metadata objects
	CreateUploadLink(context.Context, *loadmodels.CreateUploadLinkRequest) (*loadmodels.CreateUploadLinkResponse, error)
	InitMultipartUpload(context.Context, *loadmodels.InitMultipartUploadRequest) (*loadmodels.InitMultiPartUploadResponse, error)
	GetMultipartUploadLinkPart(context.Context, *loadmodels.GetMultipartUploadLinkPartRequest) (*loadmodels.GetMultipartUploadLinkPartResponse, error)
	FinishMultipartUpload(context.Context, *loadmodels.FinishMultipartUploadRequest) (*commonmodels.Empty, error)
}

// UnimplementedLoadServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoadServiceServer struct {
}

func (*UnimplementedLoadServiceServer) CreateUploadLink(context.Context, *loadmodels.CreateUploadLinkRequest) (*loadmodels.CreateUploadLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUploadLink not implemented")
}
func (*UnimplementedLoadServiceServer) InitMultipartUpload(context.Context, *loadmodels.InitMultipartUploadRequest) (*loadmodels.InitMultiPartUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitMultipartUpload not implemented")
}
func (*UnimplementedLoadServiceServer) GetMultipartUploadLinkPart(context.Context, *loadmodels.GetMultipartUploadLinkPartRequest) (*loadmodels.GetMultipartUploadLinkPartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipartUploadLinkPart not implemented")
}
func (*UnimplementedLoadServiceServer) FinishMultipartUpload(context.Context, *loadmodels.FinishMultipartUploadRequest) (*commonmodels.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishMultipartUpload not implemented")
}

func RegisterLoadServiceServer(s *grpc.Server, srv LoadServiceServer) {
	s.RegisterService(&_LoadService_serviceDesc, srv)
}

func _LoadService_CreateUploadLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(loadmodels.CreateUploadLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadServiceServer).CreateUploadLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadService/CreateUploadLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadServiceServer).CreateUploadLink(ctx, req.(*loadmodels.CreateUploadLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadService_InitMultipartUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(loadmodels.InitMultipartUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadServiceServer).InitMultipartUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadService/InitMultipartUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadServiceServer).InitMultipartUpload(ctx, req.(*loadmodels.InitMultipartUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadService_GetMultipartUploadLinkPart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(loadmodels.GetMultipartUploadLinkPartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadServiceServer).GetMultipartUploadLinkPart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadService/GetMultipartUploadLinkPart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadServiceServer).GetMultipartUploadLinkPart(ctx, req.(*loadmodels.GetMultipartUploadLinkPartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadService_FinishMultipartUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(loadmodels.FinishMultipartUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadServiceServer).FinishMultipartUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoadService/FinishMultipartUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadServiceServer).FinishMultipartUpload(ctx, req.(*loadmodels.FinishMultipartUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LoadService",
	HandlerType: (*LoadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUploadLink",
			Handler:    _LoadService_CreateUploadLink_Handler,
		},
		{
			MethodName: "InitMultipartUpload",
			Handler:    _LoadService_InitMultipartUpload_Handler,
		},
		{
			MethodName: "GetMultipartUploadLinkPart",
			Handler:    _LoadService_GetMultipartUploadLinkPart_Handler,
		},
		{
			MethodName: "FinishMultipartUpload",
			Handler:    _LoadService_FinishMultipartUpload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/LoadAPI.proto",
}
